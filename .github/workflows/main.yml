name: Release

on:
  release:
    types: [prereleased]
  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

permissions: write-all

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, linux, darwin]
        goarch: [amd64, 386]
        exclude:
          # Exclude i386 on darwin.
          - goarch: 386
            goos: darwin
        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7
          # BEGIN Windows ARM 7
          - goos: windows
            goarch: arm
            goarm: 7
          # END Windows ARM 7
          # BEGIN Other architectures
          - goos: darwin
            goarch: arm64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          - goos: windows
            goarch: arm64
          - goos: android
            goarch: arm64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          # END MIPS
          # END Other architectures
      fail-fast: false

    runs-on: windows-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Set asset name for later steps
        shell: pwsh
        run: |
          $ASSET_NAME = "${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}"
          "ASSET_NAME=$ASSET_NAME" | Add-Content -Path $env:GITHUB_ENV
          Write-Host "Asset Name: $ASSET_NAME"

      - name: Set up Go
        # Updated to v5 for best practice
        uses: actions/setup-go@v5
        with:
          go-version: ^1.19

      - name: Get project dependencies
        run: go mod download

      - name: Build
        shell: pwsh
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/EasierConnect -trimpath -ldflags "-s -w -buildid=" .

      - name: Rename Windows Executable
        if: matrix.goos == 'windows'
        shell: pwsh
        run: |
          Move-Item -Path ./build_assets/EasierConnect -Destination ./build_assets/EasierConnect.exe

      - name: Create ZIP archive
        shell: pwsh
        run: |
          Compress-Archive -Path ./build_assets/* -DestinationPath ./EasierConnect-${{ env.ASSET_NAME }}.zip -Force
      
      - name: Upload artifact for all runs
        # FIXED: Updated from v3 to v4
        uses: actions/upload-artifact@v4
        with:
          # The name of the artifact that will be displayed on the GitHub UI
          name: EasierConnect-${{ env.ASSET_NAME }}
          # The path to the file(s) to upload
          path: ./EasierConnect-${{ env.ASSET_NAME }}.zip

      - name: Upload binary to Release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        shell: pwsh
        run: |
          gh release upload ${{ github.event.release.tag_name }} ./EasierConnect-${{ env.ASSET_NAME }}.zip
