name: Release

on:
  release:
    types: [prereleased]
  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

permissions: write-all

jobs:
  build:
    strategy:
      matrix:
        # Define os runner mapping
        include:
          - goos: windows
            goarch: amd64
            os: windows-latest
          - goos: windows
            goarch: "386"
            os: windows-latest
          - goos: windows
            goarch: arm64
            os: windows-latest
          - goos: linux
            goarch: amd64
            os: ubuntu-latest
          - goos: linux
            goarch: "386"
            os: ubuntu-latest
          - goos: linux
            goarch: arm64
            os: ubuntu-latest
          - goos: linux
            goarch: arm
            goarm: 7
            os: ubuntu-latest
          - goos: darwin
            goarch: amd64
            os: macos-latest
          - goos: darwin
            goarch: arm64
            os: macos-latest
          # You can add back other targets like riscv64, mips etc. if needed
          # They will all use ubuntu-latest by default if not specified
          - goos: linux
            goarch: riscv64
            os: ubuntu-latest
            
      fail-fast: false

    # Dynamically set the runner based on the matrix
    runs-on: ${{ matrix.os }}

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Set asset name for later steps
        id: set_vars
        run: |
          ASSET_NAME="${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}"
          echo "ASSET_NAME=$ASSET_NAME" >> $GITHUB_ENV
          echo "Asset Name: $ASSET_NAME"
          
          EXE_NAME="EasierConnect"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            EXE_NAME="EasierConnect.exe"
          fi
          echo "EXE_NAME=$EXE_NAME" >> $GITHUB_ENV
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.21 # Bumping Go version is also a good practice

      - name: Get project dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/${{ env.EXE_NAME }} -trimpath -ldflags "-s -w -buildid=" .

      - name: Create ZIP archive (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cd build_assets
          zip -9vr ../EasierConnect-${{ env.ASSET_NAME }}.zip .
          cd ..
          
      - name: Create ZIP archive (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path ./build_assets/* -DestinationPath ./EasierConnect-${{ env.ASSET_NAME }}.zip -Force
      
      - name: Upload artifact for all runs
        uses: actions/upload-artifact@v4
        with:
          name: EasierConnect-${{ env.ASSET_NAME }}
          path: ./EasierConnect-${{ env.ASSET_NAME }}.zip

      - name: Upload binary to Release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.event.release.tag_name }} ./EasierConnect-${{ env.ASSET_NAME }}.zip
